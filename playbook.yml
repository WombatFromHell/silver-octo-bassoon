#!/usr/bin/env ansible-playbook
---
- name: Setup tasks
  tags: [setup]
  hosts: all
  tasks:
    - name: Install sudoers config for ansible
      tags: sudoers
      ansible.builtin.copy:
        dest: "/etc/sudoers.d/99-ansible-nopasswd"
        content: |
          # ONLY FOR USE DURING ANSIBLE DEPLOYMENT
          %wheel ALL=(ALL) NOPASSWD: ALL
        mode: "0400"
        validate: "visudo -cf %s"
      become: true

- name: Per-host roles
  hosts:
    - methyl-cachyos
    - methyl-bazzite
  vars:
    home_realpath: "{{ ansible_env.HOME | realpath }}"
    os_release_id: "{{ ansible_facts.lsb.id | default(ansible_distribution, true) | lower }}"
    os_variant_id: "{{
      lookup('file', '/etc/os-release') |
      regex_search('^VARIANT_ID=(.*)$', '\\1', multiline=True) | first |
      default(os_release_id, true) | lower
      }}"

  pre_tasks:
    - name: Gather NVIDIA driver facts
      tags: [setup, facts]
      block:
        - name: Check for NVIDIA driver presence
          ansible.builtin.stat:
            path: /proc/driver/nvidia
          register: nvidia_driver
          when: graphics_card is defined and graphics_card == "nvidia"

        - name: Determine if NVIDIA driver is missing
          ansible.builtin.set_fact:
            nvidia_exists: >
              {{ graphics_card == "nvidia" and nvidia_driver.stat is defined and nvidia_driver.stat.exists }}

    - name: Gather AMD driver facts
      tags: [setup, facts]
      block:
        - name: Get 'glxinfo'
          ansible.builtin.command: glxinfo
          register: glxinfo_output
          changed_when: false
          ignore_errors: true

        - name: Set a fact if an AMD GPU is installed as an OpenGL vendor
          when: "'OpenGL vendor string: AMD' in glxinfo_output.stdout"
          ansible.builtin.set_fact:
            amd_exists: true
          changed_when: false

    - name: Gather GRUB bootloader facts
      tags: [setup, facts]
      become: true
      block:
        - name: Check for GRUB bootloader
          ansible.builtin.stat:
            path: /boot/efi/EFI/boot/bootx64.efi
          register: grub_check
          check_mode: false

        - name: Set bootloader facts
          ansible.builtin.set_fact:
            is_grub_boot: "{{ grub_check.stat.exists | default(false) }}"
          check_mode: false

  roles:
    - btrfs
    - base
    - dotfiles
    - mounts
    - flatpak
    - distrobox
    - vfio
    - arpcbridge
    - nix

- name: Teardown tasks
  tags: [setup, teardown]
  hosts: all
  tasks:
    - name: Remove sudoers config for ansible
      tags: sudoers
      ansible.builtin.file:
        path: "/etc/sudoers.d/99-ansible-nopasswd"
        state: absent
      become: true
